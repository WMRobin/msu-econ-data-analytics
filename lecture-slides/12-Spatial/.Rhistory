records==records2
sum(records!=records2)
?rowwise
library(httr)
url = "https://api.stlouisfed.org/"
endpoint = "fred/series/observations"
params = list(
api_key = Sys.getenv("FRED_API_KEY"),
file_type = "json",
series_id = "MEDLISPRI14580"
)
response = GET(url = url, path = endpoint, query = params)
response
View(response)
View(response)
str(response)
json = response |>
httr::content("text") |>
fromJSON()
library(jsonlite)
json = response |>
httr::content("text") |>
fromJSON()
View(json)
bzn_house_prices = as_tibble(json$observations)
View(bzn_house_prices)
str(bzn_house_prices)
bzn_house_prices = as_tibble(json$observations) |>
mutate(
date = ymd(date),
median_price = as.numeric(value)
) |>
select(date, median_price)
ggplot(bzn_house_prices, aes(x = date, y = median_price)) +
geom_line()
ggplot(bzn_house_prices, aes(x = date, y = median_price)) +
geom_line() +
scale_x_continuous(labels = label_comma())
ggplot(bzn_house_prices, aes(x = date, y = median_price)) +
geom_line() +
scale_y_continuous(labels = scales::comma)
exp(1)
ln(exp(1))
log(exp(1))
exp(1.25)
ln(1.25)
log(1.25)
1000/40
1000/50
1.05^4
120/100
100/120
100/125
20/90
log(100) - log(80)
vienna = read_csv("https://osf.io/y6jvb/download")
View(vienna)
View(vienna)
head(vienna)
summary(vienna)
library(skimr)
skim(vienna)
skim(vienna)
skim(vienna)
skim(vienna)
skim(vienna)
library(tidyverse)
library(skimr)
# Load data
vienna = read_csv("https://osf.io/y6jvb/download")
# Summarize dataset
head(vienna)
summary(vienna)
skim(vienna)
table(vienna$stars)
vienna |> count(stars)
library(summarytools)
freq(vienna$stars)
freq(vienna$stars, order = "freq")
# Load hotel listings data
vienna = read_csv("https://osf.io/y6jvb/download")
ggplot(vienna, aes(x = rating_count, y = price)) + geom_point()
ggplot(vienna, aes(x = log(rating_count), y = price)) + geom_point()
ggplot(vienna, aes(x = rating_count, y = log(price))) + geom_point()
ggplot(vienna, aes(x = rating_count, y = log(price))) + geom_point()
ggplot(vienna, aes(x = log(rating_count), y = price)) + geom_point()
ggplot(vienna, aes(x = log(rating_count), y = log(price))) + geom_point()
london = read_csv("https://osf.io/ey5p7/download")
ggplot(london, aes(x = longitude, y = log(price))) + geom_point()
ggplot(london, aes(x = longitude, y = log(price))) + geom_point(alpha = 0.1)
x = ggplot(london, aes(x = longitude, y = log(price))) + geom_point()
x + geom_point(alpha = 0.01)
ggplot(london, aes(x = longitude, y = log(price))) + geom_point(alpha = 0.01)
ggplot(london, aes(x = longitude, y = log(price))) + geom_point(alpha = 0.01, jitter = 1)
london2 = london |>
mutate(longitude_bins = factor(ntile(longitude, 50)))
View(london)
colnames(london)
london2 = london |>
mutate(longitude_bins = factor(ntile(longitude, 40)))
ggplot(london2, aes(x = longitude, y = log(price), color = longitude_bins)) +
geom_point()
ggplot(london2, aes(x = longitude, y = log(price), color = longitude_bins)) +
geom_point() + scale_fill_discrete()
ggplot(london2, aes(x = longitude, y = log(price), color = longitude_bins)) +
geom_point() + scale_colour_brewer(palette = "Set1")
ggplot(london2, aes(x = longitude, y = log(price), color = longitude_bins)) +
geom_point() + scale_fill_hue()
?scale_colour_brewer
ggplot(london2, aes(x = longitude, y = log(price), color = longitude_bins)) +
geom_point() + scale_color_brewer()
ggplot(london2, aes(x = longitude, y = log(price), color = longitude_bins)) +
geom_point() + scale_color_brewer(type = "qual")
london2 = london |>
mutate(longitude_bins = factor(ntile(longitude, 40)),
bin_color = mod(longitude_bins, 9))
london2 = london |>
mutate(longitude_bins = factor(ntile(longitude, 40)),
bin_color = longitude_bins %% 9)
london2 = london |>
mutate(longitude_bins = factor(ntile(longitude, 40)),
bin_color = ntile(longitude, 40) %% 9)
ggplot(london2, aes(x = longitude, y = log(price), color = bin_color)) +
geom_point() + scale_color_brewer(type = "qual")
View(london2)
freq(london2$bin_color)
london2 = london |>
mutate(longitude_bins = factor(ntile(longitude, 40)),
bin_color = factor(ntile(longitude, 40) %% 9))
ggplot(london2, aes(x = longitude, y = log(price), color = bin_color)) +
geom_point() + scale_color_brewer(type = "qual")
ggplot(london2, aes(x = longitude, y = log(price), color = bin_color)) +
geom_point() + scale_color_brewer(type = "Set1")
ggplot(london2, aes(x = longitude, y = log(price), color = bin_color)) +
geom_point() + scale_color_brewer("Set1")
ggplot(london2, aes(x = longitude, y = log(price), color = bin_color)) +
geom_point() + scale_color_brewer(palette = "Set1")
ggplot(london2, aes(x = longitude, y = log(price), color = bin_color)) +
geom_point()
london3 = london2 |>
group_by(longitude_bins) |>
mutate(
ln_price_binned = mean(ln_price, na.rm = T),
longitude_binned = mean(longitude, na.rm = T)
)
london3 = london2 |>
group_by(longitude_bins) |>
mutate(
ln_price_binned = mean(log(price), na.rm = T),
longitude_binned = mean(longitude, na.rm = T)
)
ggplot(london3) +
geom_point(aes(x = longitude, y = log(price), color = bin_color)) +
geom_point(aes(x = longitude_binned, y = ln_price_binned), size = 2)
ggplot(london3) +
geom_point(aes(x = longitude, y = log(price), color = bin_color)) +
geom_point(aes(x = longitude_binned, y = log_price_binned), size = 2) +
scale_color_brewer(palette = "Set1")
london3 = london2 |>
group_by(longitude_bins) |>
mutate(
log_price_binned = mean(log(price), na.rm = T),
longitude_binned = mean(longitude, na.rm = T)
)
ggplot(london3) +
geom_point(aes(x = longitude, y = log(price), color = bin_color)) +
geom_point(aes(x = longitude_binned, y = log_price_binned), size = 2) +
scale_color_brewer(palette = "Set1")
ggplot(london3) +
geom_point(aes(x = longitude, y = log(price), color = bin_color)) +
geom_point(aes(x = longitude_binned, y = log_price_binned), size = 2) +
scale_color_brewer(palette = "Set2")
# Plot quantiles
london2 = london |>
mutate(
longitude_bins = factor(ntile(longitude, 40)),
bin_color = factor(ntile(longitude, 40) %% 8)
)
# Plot binned means
london3 = london2 |>
group_by(longitude_bins) |>
mutate(
log_price_binned = mean(log(price), na.rm = T),
longitude_binned = mean(longitude, na.rm = T)
)
ggplot(london3) +
geom_point(aes(x = longitude, y = log(price), color = bin_color)) +
geom_point(aes(x = longitude_binned, y = log_price_binned), size = 2) +
scale_color_brewer(palette = "Set2")
?legend
ggplot(london3) +
geom_point(aes(x = longitude, y = log(price), color = bin_color)) +
geom_point(aes(x = longitude_binned, y = log_price_binned), size = 2) +
scale_color_brewer(palette = "Set2") + theme(show.legend = F)
ggplot(london3) +
geom_point(aes(x = longitude, y = log(price), color = bin_color)) +
geom_point(aes(x = longitude_binned, y = log_price_binned), size = 2) +
scale_color_brewer(palette = "Set2")
london_binned = london2 |>
group_by(longitude_bins) |>
summarize(
log_price = mean(log(price), na.rm = T),
longitude = mean(longitude, na.rm = T)
)
ggplot(london_binned, aes(x = longitude, y = log_price)) +
geom_point(size = 3)
library(binsreg)
binsreg(london2$ln_price, london2$longitude)
binsreg(log(london2$price), london2$longitude)
ggplot(london3, aes(x = longitude, y = log(price))) + geom_smooth()
ggplot(london3, aes(x = longitude, y = log(price))) +
geom_point(aes(x = longitude_binned, y = log_price_binned), size = 2)
geom_smooth()
ggplot(london3, aes(x = longitude, y = log(price))) +
geom_point(aes(x = longitude_binned, y = log_price_binned), size = 2) +
geom_smooth()
ggplot(london3, aes(x = longitude, y = log(price))) +
geom_point(london_binned, aes(x = longitude, y = log_price), size = 2) +
geom_smooth()
ggplot(london3, aes(x = longitude, y = log(price))) +
geom_point(data = london_binned, aes(x = longitude, y = log_price), size = 2) +
geom_smooth()
ggplot(london3, aes(x = longitude, y = log(price))) +
geom_point(data = london_binned, size = 2) +
geom_smooth()
london = mutate(london, log_price = log(price))
# Plot quantiles
london2 = london |>
mutate(
longitude_bins = factor(ntile(longitude, 40)),
bin_color = factor(ntile(longitude, 40) %% 8)
)
# Plot binned means
london3 = london2 |>
group_by(longitude_bins) |>
mutate(
log_price_binned = mean(log_price, na.rm = T),
longitude_binned = mean(longitude, na.rm = T)
)
# Plot binned means only
london_binned = london2 |>
group_by(longitude_bins) |>
summarize(
log_price = mean(log_price, na.rm = T),
longitude = mean(longitude, na.rm = T)
)
ggplot(london3, aes(x = longitude, y = log_price)) +
geom_point(data = london_binned, aes(x = longitude, y = log_price), size = 2) +
geom_smooth()
ggplot(london3, aes(x = longitude, y = log_price)) +
geom_point(data = london_binned, size = 2) +
geom_smooth()
ggplot(london3, aes(x = longitude, y = ln_price)) +
geom_point(data = london_binned, size = 2) +
geom_smooth(method = "lm", formula = y ~ x)
ggplot(london3, aes(x = longitude, y = log_price)) +
geom_point(data = london_binned, size = 2) +
geom_smooth(method = "lm", formula = y ~ x)
library(tidyverse)
library(sf)
library(tmap)
library(units)
setwd("C:/git/491/course-materials/lecture-slides/12-Spatial")
counties = st_read("data/california_counties/CaliforniaCounties.shp")
plot(counties)
plot(counties["MED_AGE"])
qtm(counties)
tmap_mode("View")
tmap_mode("view")
qtm(counties)
counties = st_read("data/california_counties/CaliforniaCounties.shp") |>
st_make_valid()
qtm(counties)
str(counties)
View(counties)
counties$geometry[1]
counties$geometry[1][[1]]
counties$geometry[1][[1]][1]
View(counties)
plot(counties$geometry[5])
plot(counties$geometry)
View(counties[1:3])
counties_df = st_drop_geometry(counties)
View(counties_df)
qtm(counties_df)
alameda = counties |> filter(NAME == "Alameda")
View(alameda)
qtm(alameda)
tm_shape(counties) + tm_polygons()
tm_shape(counties) + tm_polygons() +
tm_shape(alameda) + tm_borders(col = "green", lwd = 3)
tm_shape(counties) + tm_polygons(alpha = 0.1) +
tm_shape(alameda) + tm_borders(col = "green", lwd = 3)
map_alameda = tm_shape(counties) +
tm_polygons(alpha = 0.1) +
tm_shape(alameda) +
tm_borders(col = "green", lwd = 3)
tmap_save(map_alameda, "output/map_alameda.png")
tmap_save(map_alameda, "output/map_alameda.html")
st_write(alameda, "output/alameda.shp")
st_write(alameda, "output/alameda.shp", delete_dsn = T)
View(counties)
plot(counties["MED_AGE"])
?tm_polygons
tm_shape(counties) + tm_polygons(col = "blue")
tm_shape(counties) + tm_polygons(col = "MED_AGE")
states = st_read("data/us_states_contiguous/states_contiguous.shp")
plot(counties$geometry)
plot(states$geometry)
plot(counties$geometry)
plot(states$geometry, border = "red", lwd = 6, add = T)
st_bbox(counties)
st_bbox(states)
st_crs(states)
st_crs(counties)
protected_intersection = st_intersection(protected, alameda)
# Load protected areas
protected = st_read("data/protected_areas/CPAD_2020a_units.shp")
# Verify CRS is the same as county
stopifnot(st_crs(protected) == st_crs(alameda))
# Return only the *parts* of the protected areas within the county
protected_intersection = st_intersection(protected, alameda)
tm_shape(alameda) + tm_polygons() +
tm_shape(protected_intersection) + tm_polygons(col = "red", alpha = 0.5)
tm_shape(alameda) + tm_polygons() +
tm_shape(protected_intersection) + tm_polygons(col = "red")
View(protected_intersection)
count(protected_intersection$COUNTY)
protected_intersection |> count(COUNTY)
table(protected_intersection$COUNTY)
View(protected_intersection)
table(protected_intersection$NAME)
county_centroids = st_centroid(counties)
tm_shape(counties) + tm_borders() +
tm_shape(county_centroids) + tm_dots()
View(county_centroids)
socal = counties |>
filter(NAME %in% c("Los Angeles", "Orange", "San Diego")) |>
st_union()
tm_shape(socal) + tm_polgons()
tm_shape(socal) + tm_polygons()
tm_shape(socal) + tm_polygons(col = "yellow")
stations_1km = st_buffer(stations, dist = 1000)
stations = st_read("data/bart_stations_2019.geojson")
# Buffer the stations by 1 km
stations_1km = st_buffer(stations, dist = 1000)
tm_shape(stations_1km) + tm_polygons(col = "pink") +
tm_shape(stations) + tm_dots()
parks_near_transit = st_filter(protected, stations_1km)
stations_1km_proj = stations_1km |> st_transform(st_crs(protected))
parks_near_transit = st_filter(protected, stations_1km_proj)
tm_shape(stations_1km) + tm_polygons(col = "pink") +
tm_shape(parks_near_transit) + tm_polygons(col = "green", alpha = 0.3)
tracts = st_read("data/census/tracts_acs_sdf_ac.json")
tracts = st_read("data/census/tracts_acs_sdf_ac.json")
schools = read_csv("data/alco_schools.csv")
View(tracts)
colnames(tracts)
colnames(tracts)
colnames(schools)
View(schools)
schools = read_csv("data/alco_schools.csv") |>
st_as_sf(coords = c("X", "Y"))
st_crs(schools)
qtm(schools)
tm_shapes(schools) + tm_dots()
tm_shape(schools) + tm_dots()
wgs84 = 4326
schools = read_csv("data/alco_schools.csv") |>
st_as_sf(coords = c("X", "Y"), crs = wgs84)
tm_shape(schools) + tm_dots()
qtm(schools)
View(schools)
?read_csv
schools = read_csv("data/alco_schools.csv") |>
slice_head(n = 100) |>
st_as_sf(coords = c("X", "Y"), crs = wgs84)
qtm(schools)
schools = read_csv("data/alco_schools.csv") |>
slice_head(n = 200) |>
st_as_sf(coords = c("X", "Y"), crs = wgs84)
qtm(schools)
schools = read_csv("data/alco_schools.csv") |>
slice_head(n = 300) |>
st_as_sf(coords = c("X", "Y"), crs = wgs84)
qtm(schools)
schools = read_csv("data/alco_schools.csv") |>
slice_head(n = 400) |>
st_as_sf(coords = c("X", "Y"), crs = wgs84)
qtm(schools)
schools = read_csv("data/alco_schools.csv") |>
slice_head(n = 500) |>
st_as_sf(coords = c("X", "Y"), crs = wgs84)
qtm(schools)
schools = read_csv("data/alco_schools.csv") |>
slice_head(n = 450) |>
st_as_sf(coords = c("X", "Y"), crs = wgs84)
qtm(schools)
schools = read_csv("data/alco_schools.csv") |>
slice_head(n = 425) |>
st_as_sf(coords = c("X", "Y"), crs = wgs84)
qtm(schools)
schools = read_csv("data/alco_schools.csv") |>
slice_head(n = 415) |>
st_as_sf(coords = c("X", "Y"), crs = wgs84)
qtm(schools)
schools = read_csv("data/alco_schools.csv") |>
slice_head(n = 420) |>
st_as_sf(coords = c("X", "Y"), crs = wgs84)
qtm(schools)
schools = read_csv("data/alco_schools.csv") |>
slice_head(n = 422) |>
st_as_sf(coords = c("X", "Y"), crs = wgs84)
qtm(schools)
schools = read_csv("data/alco_schools.csv") |>
slice_head(n = 424) |>
st_as_sf(coords = c("X", "Y"), crs = wgs84)
qtm(schools)
schools = read_csv("data/alco_schools.csv") |>
slice_head(n = 425) |>
st_as_sf(coords = c("X", "Y"), crs = wgs84)
qtm(schools)
View(schools)
qtm(schools |> select(geometry))
qtm(schools |> select(-Site))
qtm(schools |> select(-Address))
qtm(schools |> select(-City))
qtm(schools |> select(-State))
qtm(schools |> select(-API))
qtm(schools |> select(-Org))
qtm(schools |> select(-Site:Org))
qtm(schools |> select(Address:Org))
qtm(schools |> select(City:API))
qtm(schools |> select(City:Org))
qtm(schools |> select(Address:Org))
qtm(schools |> select(Site, City:Org))
qtm(schools |> select(Address, City:Org))
qtm(schools |> select(City:Org))
qtm(schools |> filter(row_number() != 425))
schools = read_csv("data/alco_schools.csv") |>
st_as_sf(coords = c("X", "Y"), crs = wgs84)
qtm(schools |> select(City:Org))
qtm(schools |> filter(row_number() != 425))
?iconv
schools2 = mutate(
Site = iconv(Site, "latin1", "UTF-8"),
Address = iconv(Address, "latin1", "UTF-8")
)
schools2 = schools |> mutate(
Site = iconv(Site, "latin1", "UTF-8"),
Address = iconv(Address, "latin1", "UTF-8")
)
qtm(schools2)
qtm(schools2 |> select(City:Org))
schools = read_csv("data/alco_schools.csv") |>
st_as_sf(coords = c("X", "Y"), crs = wgs84)
qtm(schools |> select(City:Org))
qtm(schools)
qtm(schools |> select(Site, City:Org))
qtm(schools |> slice_head(n = 424))
qtm(schools |> slice_head(n = 425))
qtm(schools |> slice_head(n = 450))
qtm(schools |> slice_head(n = 500))
qtm(schools |> slice_head(n = 550))
qtm(schools |> slice_head(n = 525))
qtm(schools |> slice_head(n = 515))
qtm(schools |> slice_head(n = 510))
qtm(schools |> slice_head(n = 505))
schools = read_csv("data/alco_schools.csv") |>
st_as_sf(coords = c("X", "Y"), crs = wgs84)
qtm(schools)
schools = read_csv("data/alco_schools.csv") |>
st_as_sf(coords = c("X", "Y")) #, crs = wgs84)
qtm(schools)
tm_shape(tracts) + tm(polygons(col = "skyblue")) +
tm_shape(schools) + tm_dots()
tm_shape(tracts) + tm_polygons(col = "skyblue")) +
tm_shape(tracts) + tm_polygons(col = "skyblue") +
tm_shape(schools) + tm_dots()
colnames(tracts)
colnames(schools)
schools_tract = st_join(schools, tracts)
schools = read_csv("data/alco_schools.csv") |>
st_as_sf(coords = c("X", "Y")), crs = wgs84)
schools_tract = st_join(schools, tracts)
schools = read_csv("data/alco_schools.csv") |>
st_as_sf(coords = c("X", "Y"), crs = wgs84)
schools_tract = st_join(schools, tracts)
schools_tract = schools |>
st_transform(st_crs(tracts)) |>
st_join(tracts)
View(schools_tract)
colnames(schools_tract)
tm_shape(tracts) + tm_polygons() +
tm_shape(schools_tract) + tm_dots(col = "med_hhinc")
tm_shape(tracts) + tm_polygons() +
tm_shape(schools_tract) + tm_dots(col = "API")
ggplot(schools_tract, aes(x = med_hhinc, y = API))
ggplot(schools_tract, aes(x = med_hhinc, y = API)) + geom_point()
schools_tract |>
filter(API > 0) |>
ggplot(aes(x = med_hhinc, y = API)) +
geom_point() + geom_smooth()
schools_tract |>
filter(API > 0) |>
ggplot(aes(x = med_hhinc, y = API)) +
geom_point() + geom_smooth() +
scale_x_log10()
schools_tract |>
filter(API > 0) |>
ggplot(aes(x = med_hhinc, y = API)) +
geom_point() + geom_smooth()
